{"version":3,"sources":["config.js","auth/index.js","core/Menu.js","core/cartHelpers.js","core/Footer.js","core/Layout.js","user/Signup.js","user/Signin.js","core/apiCore.js","core/ShowImage.js","core/Card.js","core/Search.js","core/Home.js","auth/PrivateRoute.js","user/UserDashboard.js","user/apiUser.js","auth/AdminRoute.js","user/AdminDashboard.js","admin/apiAdmin.js","admin/AddCategory.js","admin/AddProduct.js","core/Checkbox.js","core/Shop.js","core/Product.js","core/Checkout.js","core/Cart.js","admin/Orders.js","user/Profile.js","admin/ManageProducts.js","admin/UpdateProduct.js","admin/updateCategory.js","Routes.js","index.js"],"names":["API","process","isAuthenticated","window","localStorage","getItem","JSON","parse","isActive","history","path","location","pathname","color","fontSize","withRouter","className","style","to","length","user","role","cursor","onClick","next","removeItem","fetch","method","then","response","console","log","catch","err","signout","push","Footer","Container","Row","Col","Layout","title","description","children","Signup","useState","name","email","password","error","success","values","setValues","handleChange","event","target","value","clickSubmit","preventDefault","headers","Accept","body","stringify","json","data","display","onChange","type","Signin","loading","redirectToReferrer","signin","setItem","authenticate","getProducts","sortBy","getCategories","getFilteredProducts","skip","limit","filters","ShowImage","item","url","src","_id","alt","maxHeight","maxWidth","Card","product","showViewProductButton","showAddToCartButton","cartUpdate","showRemoveProductButton","setRun","f","run","undefined","redirect","setRedirect","count","setCount","addToCart","cart","Array","from","Set","map","p","id","find","addItem","productId","i","updateItem","shouldRedirect","substring","price","category","moment","createdAt","fromNow","quantity","showViewButton","showAddToCartBtn","splice","showRemoveButton","showCartUpdateOptions","Search","categories","search","results","searched","setData","useEffect","searchData","params","query","queryString","list","searchSubmit","e","searchMessage","onSubmit","c","key","placeholder","border","searchedProducts","Home","productsBySell","setProductsBySell","productsByArrival","setProductsByArrival","setError","PrivateRoute","Component","component","rest","render","props","state","Dashboard","token","init","userId","Authorization","getPurchaseHistory","h","products","purchaseHistory","AdminRoute","AdminDashboard","AddCategory","setName","setSuccess","createCategory","showSuccess","showError","autoFocus","required","AddProduct","shipping","photo","createdProduct","redirectToProfile","formData","FormData","files","set","createProduct","accept","Checkbox","handleFilters","checked","setCheked","handleToggle","currentCategoryId","indexOf","newCheckedCategoryId","Shop","myFilters","setMyFilters","setCategories","setSkip","size","setSize","filteredResults","setFilteredResults","loadFilteredResults","newFilters","loadMore","toSkip","filterBy","Product","setProduct","relatedProduct","setRelatedProduct","loadSingleProduct","read","listRelated","match","Checkout","clientToken","instance","address","getToken","getBraintreeClientToken","handleAddress","getTotal","reduce","currentValue","nextValue","deliveryAddress","buy","requestPaymentMethod","paymentData","paymentMethodNonce","nonce","amount","processPayment","createOrderData","transaction_id","transaction","order","createOrder","message","showDropIn","onBlur","options","authorization","paypal","flow","onInstance","Cart","items","setItems","showItems","Orders","orders","setOrders","statusValues","setStatusValues","loadOrders","listOrders","loadStatusValues","getStatusValues","showInput","readOnly","handleStatusChange","orderId","status","updateOrderStatus","o","oIndex","borderBottom","index","showStatus","pIndex","padding","Profile","update","alert","auth","updateUser","profileUpdate","redirectUser","ManageProducts","setProducts","loadProducts","destroy","deleteProduct","UpdateProduct","getProduct","initCategories","updateProduct","UpdateCategory","categoryId","getCategory","submitCategoryForm","updateCategory","data-dismiss","aria-label","aria-hidden","Routes","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7dd73b03.chunk.js","sourcesContent":["export const API = process.env.REACT_APP_API_URL;\r\n","import { API } from '../config';\r\n\r\nexport const signup = user => {\r\n    return fetch(`${API}/signup`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n};\r\n\r\nexport const signin = user => {\r\n    return fetch(`${API}/signin`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n};\r\n\r\nexport const authenticate = (data, next) => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.setItem('jwt', JSON.stringify(data));\r\n        next();\r\n    }\r\n};\r\n\r\nexport const signout = next => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.removeItem('jwt');\r\n        next();\r\n        return fetch(`${API}/signout`, {\r\n            method: 'GET'\r\n        })\r\n            .then(response => {\r\n                console.log('signout', response);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n};\r\n\r\nexport const isAuthenticated = () => {\r\n    if (typeof window == 'undefined') {\r\n        return false;\r\n    }\r\n    if (localStorage.getItem('jwt')) {\r\n        return JSON.parse(localStorage.getItem('jwt'));\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { signout, isAuthenticated } from \"../auth\";\r\nimport { itemTotal } from \"./cartHelpers\";\r\n\r\nconst isActive = (history, path) => {\r\n    if (history.location.pathname === path) {\r\n        return { color: \"#ffffff\", fontSize : \"1.3em\" };\r\n    } else {\r\n        return { color: \"#ffffff\" };\r\n    }\r\n};\r\n\r\nconst Menu = ({ history }) => (\r\n    <div>\r\n        <ul className=\"nav nav-tabs\">\r\n            <li className=\"nav-item\">\r\n                <Link\r\n                    className=\"nav-link\"\r\n                    style={isActive(history, \"/\")}\r\n                    to=\"/\"\r\n                >\r\n                    Home\r\n                </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n                <Link\r\n                    className=\"nav-link\"\r\n                    style={isActive(history, \"/shop\")}\r\n                    to=\"/shop\"\r\n                >\r\n                    Shop\r\n                </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n                <Link\r\n                    className=\"nav-link\"\r\n                    style={isActive(history, \"/cart\")}\r\n                    to=\"/cart\"\r\n                >\r\n                    Cart{\" \"}\r\n                    <sup>\r\n                        <small className=\"cart-badge\">{itemTotal()}</small>\r\n                    </sup>\r\n                </Link>\r\n            </li>\r\n\r\n            {isAuthenticated() && isAuthenticated().user.role === 0 && (\r\n                <li className=\"nav-item\">\r\n                    <Link\r\n                        className=\"nav-link\"\r\n                        style={isActive(history, \"/user/dashboard\")}\r\n                        to=\"/user/dashboard\"\r\n                    >\r\n                        Dashboard\r\n                    </Link>\r\n                </li>\r\n            )}\r\n\r\n            {isAuthenticated() && isAuthenticated().user.role === 1 && (\r\n                <li className=\"nav-item\">\r\n                    <Link\r\n                        className=\"nav-link\"\r\n                        style={isActive(history, \"/admin/dashboard\")}\r\n                        to=\"/admin/dashboard\"\r\n                    >\r\n                        Dashboard\r\n                    </Link>\r\n                </li>\r\n            )}\r\n\r\n            {!isAuthenticated() && (\r\n                <Fragment>\r\n                    <li className=\"nav-item\">\r\n                        <Link\r\n                            className=\"nav-link\"\r\n                            style={isActive(history, \"/signin\")}\r\n                            to=\"/signin\"\r\n                        >\r\n                            Signin\r\n                        </Link>\r\n                    </li>\r\n\r\n                    <li className=\"nav-item\">\r\n                        <Link\r\n                            className=\"nav-link\"\r\n                            style={isActive(history, \"/signup\")}\r\n                            to=\"/signup\"\r\n                        >\r\n                            Signup\r\n                        </Link>\r\n                    </li>\r\n                </Fragment>\r\n            )}\r\n\r\n            {isAuthenticated() && (\r\n                <li className=\"nav-item\">\r\n                    <span\r\n                        className=\"nav-link\"\r\n                        style={{ cursor: \"pointer\", color: \"#ffffff\" }}\r\n                        onClick={() =>\r\n                            signout(() => {\r\n                                history.push(\"/\");\r\n                            })\r\n                        }\r\n                    >\r\n                        Signout\r\n                    </span>\r\n                </li>\r\n            )}\r\n        </ul>\r\n    </div>\r\n);\r\n\r\nexport default withRouter(Menu);\r\n","export const addItem = (item = [], count = 0, next = f => f) => {\r\n    let cart = [];\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n        cart.push({\r\n            ...item,\r\n            count: 1\r\n        });\r\n\r\n        cart = Array.from(new Set(cart.map(p => p._id))).map(id => {\r\n            return cart.find(p => p._id === id);\r\n        });\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart));\r\n        next();\r\n    }\r\n};\r\n\r\nexport const itemTotal = () => {\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            return JSON.parse(localStorage.getItem('cart')).length;\r\n        }\r\n    }\r\n    return 0;\r\n};\r\n\r\nexport const getCart = () => {\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            return JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n    }\r\n    return [];\r\n};\r\n\r\nexport const updateItem = (productId, count) => {\r\n    let cart = [];\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n\r\n        cart.map((product, i) => {\r\n            if (product._id === productId) {\r\n                cart[i].count = count;\r\n            }\r\n        });\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart));\r\n    }\r\n};\r\n\r\nexport const removeItem = productId => {\r\n    let cart = [];\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n\r\n        cart.map((product, i) => {\r\n            if (product._id === productId) {\r\n                cart.splice(i, 1);\r\n            }\r\n        });\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart));\r\n    }\r\n    return cart;\r\n};\r\n\r\nexport const emptyCart = next => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.removeItem('cart');\r\n        next();\r\n    }\r\n};\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className='text-center py-3'>Copyright &copy; Quick-mart</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer","import React from \"react\";\r\nimport Menu from \"./Menu\";\r\nimport \"../styles.css\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst Layout = ({\r\n    title = \"Title\",\r\n    description = \"Description\",\r\n    className,\r\n    children\r\n}) => (\r\n    <div>\r\n        <Menu />\r\n        <div className=\"jumbotron\">\r\n            <h3>{title}</h3>\r\n            <p className=\"lead\">{description}</p>\r\n        </div>\r\n        <div className={className}>{children}</div>\r\n        <Footer/>\r\n    </div>\r\n);\r\n\r\nexport default Layout;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Layout from '../core/Layout';\r\nimport { signup } from '../auth';\r\n\r\nconst Signup = () => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        error: '',\r\n        success: false\r\n    });\r\n\r\n    const { name, email, password, success, error } = values;\r\n\r\n    const handleChange = name => event => {\r\n        setValues({ ...values, error: false, [name]: event.target.value });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: false });\r\n        signup({ name, email, password }).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error, success: false });\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: '',\r\n                    email: '',\r\n                    password: '',\r\n                    error: '',\r\n                    success: true\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const signUpForm = () => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Email</label>\r\n                <input onChange={handleChange('email')} type=\"email\" className=\"form-control\" value={email} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Password</label>\r\n                <input onChange={handleChange('password')} type=\"password\" className=\"form-control\" value={password} />\r\n            </div>\r\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\r\n                Submit\r\n            </button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = () => (\r\n        <div className=\"alert alert-info\" style={{ display: success ? '' : 'none' }}>\r\n            New account is created. Please <Link to=\"/signin\">Signin</Link>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Signup\"\r\n            description=\"Signup to Quick-Mart\"\r\n            className=\"container col-md-8 offset-md-2\"\r\n        >\r\n            {showSuccess()}\r\n            {showError()}\r\n            {signUpForm()}\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Layout from \"../core/Layout\";\r\nimport { signin, authenticate, isAuthenticated } from \"../auth\";\r\n\r\nconst Signin = () => {\r\n    const [values, setValues] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        error: \"\",\r\n        loading: false,\r\n        redirectToReferrer: false\r\n    });\r\n\r\n    const { email, password, loading, error, redirectToReferrer } = values;\r\n    const { user } = isAuthenticated();\r\n\r\n    const handleChange = name => event => {\r\n        setValues({ ...values, error: false, [name]: event.target.value });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: false, loading: true });\r\n        signin({ email, password }).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error, loading: false });\r\n            } else {\r\n                authenticate(data, () => {\r\n                    setValues({\r\n                        ...values,\r\n                        redirectToReferrer: true\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const signUpForm = () => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Email</label>\r\n                <input\r\n                    onChange={handleChange(\"email\")}\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    value={email}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Password</label>\r\n                <input\r\n                    onChange={handleChange(\"password\")}\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    value={password}\r\n                />\r\n            </div>\r\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\r\n                Submit\r\n            </button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div\r\n            className=\"alert alert-danger\"\r\n            style={{ display: error ? \"\" : \"none\" }}\r\n        >\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showLoading = () =>\r\n        loading && (\r\n            <div className=\"alert alert-info\">\r\n                <h2>Loading...</h2>\r\n            </div>\r\n        );\r\n\r\n    const redirectUser = () => {\r\n        if (redirectToReferrer) {\r\n            if (user && user.role === 1) {\r\n                return <Redirect to=\"/admin/dashboard\" />;\r\n            } else {\r\n                return <Redirect to=\"/user/dashboard\" />;\r\n            }\r\n        }\r\n        if (isAuthenticated()) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Signin\"\r\n            description=\"Signin to buy your needs\"\r\n            className=\"container col-md-8 offset-md-2\"\r\n        >\r\n            {showLoading()}\r\n            {showError()}\r\n            {signUpForm()}\r\n            {redirectUser()}\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Signin;\r\n","import { API } from \"../config\";\r\nimport queryString from \"query-string\";\r\n\r\nexport const getProducts = sortBy => {\r\n    return fetch(`${API}/products?sortBy=${sortBy}&order=desc&limit=6`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const getCategories = () => {\r\n    return fetch(`${API}/categories`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const getFilteredProducts = (skip, limit, filters = {}) => {\r\n    const data = {\r\n        limit,\r\n        skip,\r\n        filters\r\n    };\r\n    return fetch(`${API}/products/by/search`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n};\r\n\r\nexport const list = params => {\r\n    const query = queryString.stringify(params);\r\n    console.log(\"query\", query);\r\n    return fetch(`${API}/products/search?${query}`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const read = productId => {\r\n    return fetch(`${API}/product/${productId}`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const listRelated = productId => {\r\n    return fetch(`${API}/products/related/${productId}`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const getBraintreeClientToken = (userId, token) => {\r\n    return fetch(`${API}/braintree/getToken/${userId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const processPayment = (userId, token, paymentData) => {\r\n    return fetch(`${API}/braintree/payment/${userId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(paymentData)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const createOrder = (userId, token, createOrderData) => {\r\n    return fetch(`${API}/order/create/${userId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({ order: createOrderData })\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n","import React from \"react\";\r\nimport { API } from \"../config\";\r\n\r\nconst ShowImage = ({ item, url }) => (\r\n    <div className=\"product-img\">\r\n        <img\r\n            src={`${API}/${url}/photo/${item._id}`}\r\n            alt={item.name}\r\n            className=\"mb-3\"\r\n            style={{ maxHeight: \"100%\", maxWidth: \"100%\" }}\r\n        />\r\n    </div>\r\n);\r\n\r\nexport default ShowImage;\r\n","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport ShowImage from './ShowImage';\r\nimport moment from 'moment';\r\nimport { addItem, updateItem, removeItem } from './cartHelpers';\r\n\r\nconst Card = ({\r\n  product,\r\n  showViewProductButton = true,\r\n  showAddToCartButton = true,\r\n  cartUpdate = false,\r\n  showRemoveProductButton = false,\r\n  setRun = f => f,\r\n  run = undefined\r\n  // changeCartSize\r\n}) => {\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [count, setCount] = useState(product.count);\r\n\r\n  const showViewButton = showViewProductButton => {\r\n    return (\r\n      showViewProductButton && (\r\n        <Link to={`/product/${product._id}`} className=\"mr-2\">\r\n          <button className=\"btn btn-outline-primary mt-2 mb-2 card-btn-1\">View Product</button>\r\n        </Link>\r\n      )\r\n    );\r\n  };\r\n  const addToCart = () => {\r\n    // console.log('added');\r\n    addItem(product, setRedirect(true));\r\n  };\r\n\r\n  const shouldRedirect = redirect => {\r\n    if (redirect) {\r\n      return <Redirect to=\"/cart\" />;\r\n    }\r\n  };\r\n\r\n  const showAddToCartBtn = showAddToCartButton => {\r\n    return (\r\n      showAddToCartButton && (\r\n        <button onClick={addToCart} className=\"btn btn-outline-warning mt-2 mb-2 card-btn-1  \">\r\n          Add to cart\r\n        </button>\r\n      )\r\n    );\r\n  };\r\n\r\n  const showStock = quantity => {\r\n    return quantity > 0 ? (\r\n      <span className=\"badge badge-primary badge-pill\">In Stock </span>\r\n    ) : (\r\n      <span className=\"badge badge-primary badge-pill\">Out of Stock </span>\r\n    );\r\n  };\r\n\r\n  const handleChange = productId => event => {\r\n    setRun(!run); // run useEffect in parent Cart\r\n    setCount(event.target.value < 1 ? 1 : event.target.value);\r\n    if (event.target.value >= 1) {\r\n      updateItem(productId, event.target.value);\r\n    }\r\n  };\r\n\r\n  const showCartUpdateOptions = cartUpdate => {\r\n    return (\r\n      cartUpdate && (\r\n        <div>\r\n          <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\">Adjust Quantity</span>\r\n            </div>\r\n            <input type=\"number\" className=\"form-control\" value={count} onChange={handleChange(product._id)} />\r\n          </div>\r\n        </div>\r\n      )\r\n    );\r\n  };\r\n  const showRemoveButton = showRemoveProductButton => {\r\n    return (\r\n      showRemoveProductButton && (\r\n        <button\r\n          onClick={() => {\r\n            removeItem(product._id);\r\n            setRun(!run); // run useEffect in parent Cart\r\n          }}\r\n          className=\"btn btn-outline-danger mt-2 mb-2\"\r\n        >\r\n          Remove Product\r\n        </button>\r\n      )\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"card \">\r\n      <div className=\"card-header card-header-1 \">{product.name}</div>\r\n      <div className=\"card-body\">\r\n        {shouldRedirect(redirect)}\r\n        <ShowImage item={product} url=\"product\" />\r\n        <p className=\"card-p  mt-2\">{product.description.substring(0, 100)} </p>\r\n        <p className=\"card-p black-10\">$ {product.price}</p>\r\n        <p className=\"black-9\">Category: {product.category && product.category.name}</p>\r\n        <p className=\"black-8\">Added on {moment(product.createdAt).fromNow()}</p>\r\n        {showStock(product.quantity)}\r\n        <br />\r\n\r\n        {showViewButton(showViewProductButton)}\r\n\r\n        {showAddToCartBtn(showAddToCartButton)}\r\n\r\n        {showRemoveButton(showRemoveProductButton)}\r\n\r\n        {showCartUpdateOptions(cartUpdate)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getCategories, list } from \"./apiCore\";\r\nimport Card from \"./Card\";\r\n\r\nconst Search = () => {\r\n    const [data, setData] = useState({\r\n        categories: [],\r\n        category: \"\",\r\n        search: \"\",\r\n        results: [],\r\n        searched: false\r\n    });\r\n\r\n    const { categories, category, search, results, searched } = data;\r\n\r\n    const loadCategories = () => {\r\n        getCategories().then(data => {\r\n            console.log(data)\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setData({ ...data, categories: data });\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadCategories();\r\n    }, []);\r\n\r\n    const searchData = () => {\r\n        // console.log(search, category);\r\n        if (search) {\r\n            list({ search: search || undefined, category: category }).then(\r\n                response => {\r\n                    if (response.error) {\r\n                        console.log(response.error);\r\n                    } else {\r\n                        setData({ ...data, results: response, searched: true });\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    const searchSubmit = e => {\r\n        e.preventDefault();\r\n        searchData();\r\n    };\r\n\r\n    const handleChange = name => event => {\r\n        setData({ ...data, [name]: event.target.value, searched: false });\r\n    };\r\n\r\n    const searchMessage = (searched, results) => {\r\n        if (searched && results.length > 0) {\r\n            return `Found ${results.length} products`;\r\n        }\r\n        if (searched && results.length < 1) {\r\n            return `No products found`;\r\n        }\r\n    };\r\n\r\n    const searchedProducts = (results = []) => {\r\n        return (\r\n            <div>\r\n                <h2 className=\"mt-4 mb-4\">\r\n                    {searchMessage(searched, results)}\r\n                </h2>\r\n\r\n                <div className=\"row\">\r\n                    {results.map((product, i) => (\r\n                        <div className=\"col-4 mb-3\">\r\n                            <Card key={i} product={product} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const searchForm = () => (\r\n        <form onSubmit={searchSubmit}>\r\n            <span className=\"input-group-text\">\r\n                <div className=\"input-group input-group-lg\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <select\r\n                            className=\"btn mr-2\"\r\n                            onChange={handleChange(\"category\")}\r\n                        >\r\n                            <option value=\"All\">All</option>\r\n                            {categories.map((c, i) => (\r\n                                <option key={i} value={c._id}>\r\n                                    {c.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <input\r\n                        type=\"search\"\r\n                        className=\"form-control\"\r\n                        onChange={handleChange(\"search\")}\r\n                        placeholder=\"Search by name\"\r\n                    />\r\n                </div>\r\n                <div\r\n                    className=\"btn input-group-append\"\r\n                    style={{ border: \"none\" }}\r\n                >\r\n                    <button className=\"input-group-text\">Search</button>\r\n                </div>\r\n            </span>\r\n        </form>\r\n    );\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"container mb-3\">{searchForm()}</div>\r\n            <div className=\"container-fluid mb-3\">\r\n                {searchedProducts(results)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport { getProducts } from './apiCore';\r\nimport Card from './Card';\r\nimport Search from './Search';\r\n\r\nconst Home = () => {\r\n    const [productsBySell, setProductsBySell] = useState([]);\r\n    const [productsByArrival, setProductsByArrival] = useState([]);\r\n    const [error, setError] = useState(false);\r\n\r\n    const loadProductsBySell = () => {\r\n        getProducts('sold').then(data => {\r\n            console.log(data)\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setProductsBySell(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    const loadProductsByArrival = () => {\r\n        getProducts('createdAt').then(data => {\r\n            console.log(data);\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setProductsByArrival(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadProductsByArrival();\r\n        loadProductsBySell();\r\n    }, []);\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Quick-Mart\"\r\n            description=\"We have all your needs\"\r\n            className=\"container-fluid\"\r\n        >\r\n            <Search />\r\n            <h2 className=\"mb-4\">New Arrivals</h2>\r\n            <div className=\"row\">\r\n                {productsByArrival.map((product, i) => (\r\n                    <div key={i} className=\"col-4 mb-3\">\r\n                        <Card product={product} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <h2 className=\"mb-4\">Best Sellers</h2>\r\n            <div className=\"row\">\r\n                {productsBySell.map((product, i) => (\r\n                    <div key={i} className=\"col-4 mb-3\">\r\n                        <Card product={product} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"./index\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            isAuthenticated() ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/signin\",\r\n                        state: { from: props.location }\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nexport default PrivateRoute;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getPurchaseHistory } from \"./apiUser\";\r\nimport moment from \"moment\";\r\n\r\nconst Dashboard = () => {\r\n    const [history, setHistory] = useState([]);\r\n\r\n    const {\r\n        user: { _id, name, email, role }\r\n    } = isAuthenticated();\r\n    const token = isAuthenticated().token;\r\n\r\n    const init = (userId, token) => {\r\n        getPurchaseHistory(userId, token).then(data => {\r\n            // if (data.error) {\r\n            //     console.log(data.error);\r\n            // } else {\r\n            //     setHistory(data);\r\n            // }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        init(_id, token);\r\n    }, []);\r\n\r\n    const userLinks = () => {\r\n        return (\r\n            <div className=\"card\">\r\n                <h4 className=\"card-header\">User Links</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/cart\">\r\n                            My Cart\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to={`/profile/${_id}`}>\r\n                            Update Profile\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const userInfo = () => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">User Information</h3>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">{name}</li>\r\n                    <li className=\"list-group-item\">{email}</li>\r\n                    <li className=\"list-group-item\">\r\n                        {role === 1 ? \"Admin\" : \"Registered User\"}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const purchaseHistory = history => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">Purchase history</h3>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        {history.map((h, i) => {\r\n                            return (\r\n                                <div>\r\n                                    <hr />\r\n                                    {h.products.map((p, i) => {\r\n                                        return (\r\n                                            <div key={i}>\r\n                                                <h6>Product name: {p.name}</h6>\r\n                                                <h6>\r\n                                                    Product price: ${p.price}\r\n                                                </h6>\r\n                                                <h6>\r\n                                                    Purchased date:{\" \"}\r\n                                                    {moment(\r\n                                                        p.createdAt\r\n                                                    ).fromNow()}\r\n                                                </h6>\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Dashboard\"\r\n            description={`G'day ${name}!`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">{userLinks()}</div>\r\n                <div className=\"col-9\">\r\n                    {userInfo()}\r\n                    {purchaseHistory(history)}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import { API } from \"../config\";\r\n\r\nexport const read = (userId, token) => {\r\n    return fetch(`${API}/user/${userId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const update = (userId, token, user) => {\r\n    return fetch(`${API}/user/${userId}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const updateUser = (user, next) => {\r\n    if (typeof window !== \"undefined\") {\r\n        if (localStorage.getItem(\"jwt\")) {\r\n            let auth = JSON.parse(localStorage.getItem(\"jwt\"));\r\n            auth.user = user;\r\n            localStorage.setItem(\"jwt\", JSON.stringify(auth));\r\n            next();\r\n        }\r\n    }\r\n};\r\n\r\nexport const getPurchaseHistory = (userId, token) => {\r\n    return fetch(`${API}/orders/by/user/${userId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"./index\";\r\n\r\nconst AdminRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            isAuthenticated() && isAuthenticated().user.role === 1 ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/signin\",\r\n                        state: { from: props.location }\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nexport default AdminRoute;\r\n","import React from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AdminDashboard = () => {\r\n    const {\r\n        user: { _id, name, email, role }\r\n    } = isAuthenticated();\r\n\r\n    const adminLinks = () => {\r\n        return (\r\n            <div className=\"card\">\r\n                <h4 className=\"card-header\">Admin Links</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/create/category\">\r\n                            Create Category\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/create/product\">\r\n                            Create Product\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/admin/orders\">\r\n                            View Orders\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/admin/products\">\r\n                            Manage Products\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const adminInfo = () => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">Admin Information</h3>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">{name}</li>\r\n                    <li className=\"list-group-item\">{email}</li>\r\n                    <li className=\"list-group-item\">\r\n                        {role === 1 ? \"Admin\" : \"Registered User\"}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Admin Dashboard\"\r\n            description={`Good'day ${name}!`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">{adminLinks()}</div>\r\n                <div className=\"col-9\">{adminInfo()}</div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default AdminDashboard;\r\n","import { API } from '../config';\r\n\r\nexport const createCategory = (userId, token, category) => {\r\n    return fetch(`${API}/category/create/${userId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(category)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n            \r\n            \r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n};\r\n\r\nexport const updateCategory = (categoryId, userId, token, category) => {\r\n    return fetch(`${API}/category/${categoryId}/${userId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            \r\n            'Content-Type': 'application/json',\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(category)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const createProduct = (userId, token, product) => {\r\n    return fetch(`${API}/product/create/${userId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: product\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n};\r\n\r\nexport const getCategory = categoryId => {\r\n    return fetch(`${API}/category/${categoryId}`, {\r\n        method: 'GET'\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const getCategories = () => {\r\n    return fetch(`${API}/categories`, {\r\n        method: 'GET'\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const listOrders = (userId, token) => {\r\n    return fetch(`${API}/order/list/${userId}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const getStatusValues = (userId, token) => {\r\n    return fetch(`${API}/order/status-values/${userId}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const updateOrderStatus = (userId, token, orderId, status) => {\r\n    return fetch(`${API}/order/${orderId}/status/${userId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({ status, orderId })\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\n\r\nexport const getProducts = () => {\r\n    return fetch(`${API}/products?limit=undefined`, {\r\n        method: 'GET'\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const deleteProduct = (productId, userId, token) => {\r\n    return fetch(`${API}/product/${productId}/${userId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const getProduct = productId => {\r\n    return fetch(`${API}/product/${productId}`, {\r\n        method: 'GET'\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const updateProduct = (productId, userId, token, product) => {\r\n    return fetch(`${API}/product/${productId}/${userId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: product\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createCategory } from \"./apiAdmin\";\r\n\r\nconst AddCategory = () => {\r\n    const [name, setName] = useState(\"\");\r\n    const [error, setError] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    // destructure user and token from localstorage\r\n    const { user, token } = isAuthenticated();\r\n\r\n    const handleChange = e => {\r\n        setError(\"\");\r\n        setName(e.target.value);\r\n    };\r\n\r\n    const clickSubmit = e => {\r\n        e.preventDefault();\r\n        setError(\"\");\r\n        setSuccess(false);\r\n        // make request to api to create category\r\n        createCategory(user._id, token, { name }).then(data => {\r\n                setSuccess(true);\r\n        });\r\n    };\r\n\r\n    const newCategoryFom = () => (\r\n        <form onSubmit={clickSubmit}>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={handleChange}\r\n                    value={name}\r\n                    autoFocus\r\n                    required\r\n                />\r\n            </div>\r\n            <button className=\"btn btn-outline-primary\">Create Category</button>\r\n        </form>\r\n    );\r\n\r\n    const showSuccess = () => {\r\n        if (success) {\r\n            return <h3 className=\"text-success\">{name} is created</h3>;\r\n        }\r\n    };\r\n\r\n    const showError = () => {\r\n        if (error) {\r\n            return <h3 className=\"text-danger\">Category should be unique</h3>;\r\n        }\r\n    };\r\n\r\n    const goBack = () => (\r\n        <div className=\"mt-5\">\r\n            <Link to=\"/admin/dashboard\" className=\"text-warning\">\r\n                Back to Dashboard\r\n            </Link>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Add a new category\"\r\n            description={`Good'day ${user.name}, ready to add a new category?`}\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showSuccess()}\r\n                    {showError()}\r\n                    {newCategoryFom()}\r\n                    {goBack()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default AddCategory;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth';\r\nimport { Link } from 'react-router-dom';\r\nimport { createProduct, getCategories } from './apiAdmin';\r\n\r\nconst AddProduct = () => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        description: '',\r\n        price: '',\r\n        categories: [\"others\"],\r\n        category: '',\r\n        shipping: '',\r\n        quantity: '',\r\n        photo: '',\r\n        loading: false,\r\n        error: '',\r\n        createdProduct: '',\r\n        redirectToProfile: false,\r\n        formData: ''\r\n    });\r\n\r\n    const { user, token } = isAuthenticated();\r\n    const {\r\n        name,\r\n        description,\r\n        price,\r\n        categories,\r\n        category,\r\n        shipping,\r\n        quantity,\r\n        loading,\r\n        error,\r\n        createdProduct,\r\n        redirectToProfile,\r\n        formData\r\n    } = values;\r\n\r\n    const init = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    categories: data,\r\n                    formData: new FormData()\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, []);\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\r\n        formData.set(name, value);\r\n        setValues({ ...values, [name]: value });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: '', loading: true });\r\n\r\n        createProduct(user._id, token, formData).then(data => {\r\n            console.log(data)\r\n                setValues({\r\n                    ...values,\r\n                    name: '',\r\n                    description: '',\r\n                    photo: '',\r\n                    price: '',\r\n                    quantity: '',\r\n                    loading: false,\r\n                     createdProduct: data.name\r\n                });\r\n           \r\n        });\r\n    };\r\n\r\n    const newPostForm = () => (\r\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\r\n            <h4>Post Photo</h4>\r\n            <div className=\"form-group\">\r\n                <label className=\"btn btn-secondary\">\r\n                    <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Description</label>\r\n                <textarea onChange={handleChange('description')} className=\"form-control\" value={description} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Price</label>\r\n                <input onChange={handleChange('price')} type=\"number\" className=\"form-control\" value={price} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Category</label>\r\n                <select onChange={handleChange('category')} className=\"form-control\">\r\n                    <option>Please select</option>\r\n                    {categories &&\r\n                        categories.map((c, i) => (\r\n                            <option key={i} value={c._id}>\r\n                                {c.name}\r\n                            </option>\r\n                        ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Shipping</label>\r\n                <select onChange={handleChange('shipping')} className=\"form-control\">\r\n                    <option>Please select</option>\r\n                    <option value=\"0\">No</option>\r\n                    <option value=\"1\">Yes</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Quantity</label>\r\n                <input onChange={handleChange('quantity')} type=\"number\" className=\"form-control\" value={quantity} />\r\n            </div>\r\n\r\n            <button className=\"btn btn-outline-primary\">Create Product</button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = () => (\r\n        <div className=\"alert alert-info\" style={{ display: createdProduct ? '' : 'none' }}>\r\n            <h2>{`${createdProduct}`} is created!</h2>\r\n        </div>\r\n    );\r\n\r\n    const showLoading = () =>\r\n        loading && (\r\n            <div className=\"alert alert-success\">\r\n                <h2>Loading...</h2>\r\n            </div>\r\n        );\r\n\r\n    return (\r\n        <Layout title=\"Add a new product\" description={`Good'day ${user.name}, ready to add a new product?`}>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showLoading()}\r\n                    {showSuccess()}\r\n                    {showError()}\r\n                    {newPostForm()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default AddProduct;\r\n","import React, { useState } from \"react\";\r\n\r\nconst Checkbox = ({ categories, handleFilters }) => {\r\n    const [checked, setCheked] = useState([]);\r\n\r\n    const handleToggle = c => () => {\r\n        \r\n        const currentCategoryId = checked.indexOf(c);\r\n        const newCheckedCategoryId = [...checked];\r\n        \r\n        if (currentCategoryId === -1) {\r\n            newCheckedCategoryId.push(c);\r\n        } else {\r\n            newCheckedCategoryId.splice(currentCategoryId, 1);\r\n        }\r\n        setCheked(newCheckedCategoryId);\r\n        handleFilters(newCheckedCategoryId);\r\n    };\r\n\r\n    return categories.map((c, i) => (\r\n        <li key={i} className=\"list-unstyled\">\r\n            <input\r\n                onChange={handleToggle(c._id)}\r\n                value={checked.indexOf(c._id === -1)}\r\n                type=\"checkbox\"\r\n                className=\"form-check-input\"\r\n            />\r\n            <label className=\"form-check-label\">{c.name}</label>\r\n        </li>\r\n    ));\r\n};\r\n\r\nexport default Checkbox;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"./Layout\";\r\nimport Card from \"./Card\";\r\nimport { getCategories, getFilteredProducts } from \"./apiCore\";\r\nimport Checkbox from \"./Checkbox\";\r\n// import RadioBox from \"./RadioBox\";\r\n// import { prices } from \"./fixedPrices\";\r\n\r\nconst Shop = () => {\r\n    const [myFilters, setMyFilters] = useState({\r\n        filters: { category: [], price: [] }\r\n    });\r\n    const [categories, setCategories] = useState([]);\r\n    const [error, setError] = useState(false);\r\n    const [limit, setLimit] = useState(6);\r\n    const [skip, setSkip] = useState(0);\r\n    const [size, setSize] = useState(0);\r\n    const [filteredResults, setFilteredResults] = useState([]);\r\n\r\n    const init = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setCategories(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    const loadFilteredResults = newFilters => {\r\n        // console.log(newFilters);\r\n        getFilteredProducts(skip, limit, newFilters).then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setFilteredResults(data.data);\r\n                setSize(data.size);\r\n                setSkip(0);\r\n            }\r\n        });\r\n    };\r\n\r\n    const loadMore = () => {\r\n        let toSkip = skip + limit;\r\n        // console.log(newFilters);\r\n        getFilteredProducts(toSkip, limit, myFilters.filters).then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setFilteredResults([...filteredResults, ...data.data]);\r\n                setSize(data.size);\r\n                setSkip(toSkip);\r\n            }\r\n        });\r\n    };\r\n\r\n    const loadMoreButton = () => {\r\n        return (\r\n            size > 0 &&\r\n            size >= limit && (\r\n                <button onClick={loadMore} className=\"btn btn-warning mb-5\">\r\n                    Load more\r\n                </button>\r\n            )\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        init();\r\n        loadFilteredResults(skip, limit, myFilters.filters);\r\n    }, []);\r\n\r\n    const handleFilters = (filters, filterBy) => {\r\n        // console.log(\"SHOP\", filters, filterBy);\r\n        const newFilters = { ...myFilters };\r\n        newFilters.filters[filterBy] = filters;\r\n\r\n        // if (filterBy === \"price\") {\r\n        //     let priceValues = handlePrice(filters);\r\n        //     newFilters.filters[filterBy] = priceValues;\r\n        // }\r\n        loadFilteredResults(myFilters.filters);\r\n        setMyFilters(newFilters);\r\n    };\r\n\r\n    // const handlePrice = value => {\r\n    //     const data = prices;\r\n    //     let array = [];\r\n\r\n    //     for (let key in data) {\r\n    //         if (data[key]._id === parseInt(value)) {\r\n    //             array = data[key].array;\r\n    //         }\r\n    //     }\r\n    //     return array;\r\n    // };\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Shop Page\"\r\n            description=\"Search and find product of your choice\"\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-4\">\r\n                    <h4>Filter by categories</h4>\r\n                    <ul>\r\n                        <Checkbox\r\n                            categories={categories}\r\n                            handleFilters={filters =>\r\n                                handleFilters(filters, \"category\")\r\n                            }\r\n                        />\r\n                    </ul>\r\n\r\n                    {/* <h4>Filter by price range</h4>\r\n                    <div>\r\n                        <RadioBox\r\n                            prices={prices}\r\n                            handleFilters={filters =>\r\n                                handleFilters(filters, \"price\")\r\n                            }\r\n                        />\r\n                    </div> */}\r\n                </div>\r\n\r\n                <div className=\"col-8\">\r\n                    <h2 className=\"mb-4\">Products</h2>\r\n                    <div className=\"row\">\r\n                        {filteredResults.map((product, i) => (\r\n                            <div key={i} className=\"col-4 mb-3\">\r\n                                <Card product={product} />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <hr />\r\n                    {loadMoreButton()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Shop;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport { read, listRelated } from './apiCore';\r\nimport Card from './Card';\r\n\r\nconst Product = props => {\r\n    const [product, setProduct] = useState({});\r\n    const [relatedProduct, setRelatedProduct] = useState([]);\r\n    const [error, setError] = useState(false);\r\n\r\n    const loadSingleProduct = productId => {\r\n        read(productId).then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setProduct(data);\r\n                // fetch related products\r\n                listRelated(data._id).then(data => {\r\n                    if (data.error) {\r\n                        setError(data.error);\r\n                    } else {\r\n                        setRelatedProduct(data);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const productId = props.match.params.productId;\r\n        loadSingleProduct(productId);\r\n    }, [props]);\r\n\r\n    return (\r\n        <Layout\r\n            title={product && product.name}\r\n            description={product && product.description && product.description.substring(0, 100)}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-8\">\r\n                    {product && product.description && <Card product={product} showViewProductButton={false} />}\r\n                </div>\r\n\r\n                <div className=\"col-4\">\r\n                    <h4>Related products</h4>\r\n                    {relatedProduct.map((p, i) => (\r\n                        <div className=\"mb-3\" key={i}>\r\n                            <Card product={p} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Product;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { getProducts, getBraintreeClientToken, processPayment, createOrder } from './apiCore';\r\nimport { emptyCart } from './cartHelpers';\r\nimport Card from './Card';\r\nimport { isAuthenticated } from '../auth';\r\nimport { Link } from 'react-router-dom';\r\n// import \"braintree-web\"; // not using this package\r\nimport DropIn from 'braintree-web-drop-in-react';\r\n\r\nconst Checkout = ({ products, setRun = f => f, run = undefined }) => {\r\n    const [data, setData] = useState({\r\n        loading: false,\r\n        success: false,\r\n        clientToken: null,\r\n        error: '',\r\n        instance: {},\r\n        address: ''\r\n    });\r\n\r\n    const userId = isAuthenticated() && isAuthenticated().user._id;\r\n    const token = isAuthenticated() && isAuthenticated().token;\r\n\r\n    const getToken = (userId, token) => {\r\n        getBraintreeClientToken(userId, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n                setData({ ...data, error: data.error });\r\n            } else {\r\n                console.log(data);\r\n                setData({ clientToken: data.clientToken });\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getToken(userId, token);\r\n    }, []);\r\n\r\n    const handleAddress = event => {\r\n        setData({ ...data, address: event.target.value });\r\n    };\r\n\r\n    const getTotal = () => {\r\n        return products.reduce((currentValue, nextValue) => {\r\n            return currentValue + nextValue.count * nextValue.price;\r\n        }, 0);\r\n    };\r\n\r\n    const showCheckout = () => {\r\n        return isAuthenticated() ? (\r\n            <div>{showDropIn()}</div>\r\n        ) : (\r\n            <Link to=\"/signin\">\r\n                <button className=\"btn btn-primary\">Sign in to checkout</button>\r\n            </Link>\r\n        );\r\n    };\r\n\r\n    let deliveryAddress = data.address;\r\n\r\n    const buy = () => {\r\n        setData({ loading: true });\r\n        // send the nonce to your server\r\n        // nonce = data.instance.requestPaymentMethod()\r\n        let nonce;\r\n        let getNonce = data.instance\r\n            .requestPaymentMethod()\r\n            .then(data => {\r\n                // console.log(data);\r\n                nonce = data.nonce;\r\n                // once you have nonce (card type, card number) send nonce as 'paymentMethodNonce'\r\n                // and also total to be charged\r\n                // console.log(\r\n                //     \"send nonce and total to process: \",\r\n                //     nonce,\r\n                //     getTotal(products)\r\n                // );\r\n                const paymentData = {\r\n                    paymentMethodNonce: nonce,\r\n                    amount: getTotal(products)\r\n                };\r\n\r\n                processPayment(userId, token, paymentData)\r\n                    .then(response => {\r\n                        console.log(response);\r\n                        // empty cart\r\n                        // create order\r\n\r\n                        const createOrderData = {\r\n                            products: products,\r\n                            transaction_id: response.transaction.id,\r\n                            amount: response.transaction.amount,\r\n                            address: deliveryAddress\r\n                        };\r\n\r\n                        createOrder(userId, token, createOrderData)\r\n                            .then(response => {\r\n                                emptyCart(() => {\r\n                                    setRun(!run); // run useEffect in parent Cart\r\n                                    console.log('payment success and empty cart');\r\n                                    setData({\r\n                                        loading: false,\r\n                                        success: true\r\n                                    });\r\n                                });\r\n                            })\r\n                            .catch(error => {\r\n                                console.log(error);\r\n                                setData({ loading: false });\r\n                            });\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error);\r\n                        setData({ loading: false });\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                // console.log(\"dropin error: \", error);\r\n                setData({ ...data, error: error.message });\r\n            });\r\n    };\r\n\r\n    const showDropIn = () => (\r\n        <div onBlur={() => setData({ ...data, error: '' })}>\r\n            {data.clientToken !== null && products.length > 0 ? (\r\n                <div>\r\n                    <div className=\"gorm-group mb-3\">\r\n                        <label className=\"text-muted\">Delivery address:</label>\r\n                        <textarea\r\n                            onChange={handleAddress}\r\n                            className=\"form-control\"\r\n                            value={data.address}\r\n                            placeholder=\"Type your delivery address here...\"\r\n                        />\r\n                    </div>\r\n\r\n                    <DropIn\r\n                        options={{\r\n                            authorization: data.clientToken,\r\n                            paypal: {\r\n                                flow: 'vault'\r\n                            }\r\n                        }}\r\n                        onInstance={instance => (data.instance = instance)}\r\n                    />\r\n                    <button onClick={buy} className=\"btn btn-success btn-block\">\r\n                        Pay\r\n                    </button>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    );\r\n\r\n    const showError = error => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = success => (\r\n        <div className=\"alert alert-info\" style={{ display: success ? '' : 'none' }}>\r\n            Thanks! Your payment was successful!\r\n        </div>\r\n    );\r\n\r\n    const showLoading = loading => loading && <h2 className=\"text-danger\">Loading...</h2>;\r\n\r\n    return (\r\n        <div>\r\n            <h2>Total: ${getTotal()}</h2>\r\n            {showLoading(data.loading)}\r\n            {showSuccess(data.success)}\r\n            {showError(data.error)}\r\n            {showCheckout()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Checkout;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Layout from './Layout';\r\nimport { getCart } from './cartHelpers';\r\nimport Card from './Card';\r\nimport Checkout from './Checkout';\r\n\r\nconst Cart = () => {\r\n    const [items, setItems] = useState([]);\r\n    const [run, setRun] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setItems(getCart());\r\n    }, [run]);\r\n\r\n    const showItems = items => {\r\n        return (\r\n            <div>\r\n                <h2>Your cart has {`${items.length}`} items</h2>\r\n                <hr />\r\n                {items.map((product, i) => (\r\n                    <Card\r\n                        key={i}\r\n                        product={product}\r\n                        showAddToCartButton={false}\r\n                        cartUpdate={true}\r\n                        showRemoveProductButton={true}\r\n                        setRun={setRun}\r\n                        run={run}\r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const noItemsMessage = () => (\r\n        <h2>\r\n            Your cart is empty. <br /> <Link to=\"/shop\" style={{color:\"#a37eba\"}}>let's Shop</Link>\r\n        </h2>\r\n    );\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Shopping Cart\"\r\n            description=\"Manage your cart items. Add remove checkout or continue shopping.\"\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">{items.length > 0 ? showItems(items) : noItemsMessage()}</div>\r\n\r\n                <div className=\"col-6\">\r\n                    <h2 className=\"mb-4\">Your cart summary</h2>\r\n                    <hr />\r\n                    <Checkout products={items} setRun={setRun} run={run} />\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Cart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { listOrders, getStatusValues, updateOrderStatus } from \"./apiAdmin\";\r\nimport moment from \"moment\";\r\n\r\nconst Orders = () => {\r\n    const [orders, setOrders] = useState([]);\r\n    const [statusValues, setStatusValues] = useState([]);\r\n\r\n    const { user, token } = isAuthenticated();\r\n\r\n    const loadOrders = () => {\r\n        listOrders(user._id, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setOrders(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    const loadStatusValues = () => {\r\n        getStatusValues(user._id, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setStatusValues(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadOrders();\r\n        loadStatusValues();\r\n    }, []);\r\n\r\n    const showOrdersLength = () => {\r\n        if (orders.length > 0) {\r\n            return (\r\n                <h1 className=\"text-danger display-2\">\r\n                    Total orders: {orders.length}\r\n                </h1>\r\n            );\r\n        } else {\r\n            return <h1 className=\"text-danger\">No orders</h1>;\r\n        }\r\n    };\r\n\r\n    const showInput = (key, value) => (\r\n        <div className=\"input-group mb-2 mr-sm-2\">\r\n            <div className=\"input-group-prepend\">\r\n                <div className=\"input-group-text\">{key}</div>\r\n            </div>\r\n            <input\r\n                type=\"text\"\r\n                value={value}\r\n                className=\"form-control\"\r\n                readOnly\r\n            />\r\n        </div>\r\n    );\r\n\r\n    const handleStatusChange = (e, orderId) => {\r\n        updateOrderStatus(user._id, token, orderId, e.target.value).then(\r\n            data => {\r\n                if (data.error) {\r\n                    console.log(\"Status update failed\");\r\n                } else {\r\n                    loadOrders();\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    const showStatus = o => (\r\n        <div className=\"form-group\">\r\n            <h3 className=\"mark mb-4\">Status: {o.status}</h3>\r\n            <select\r\n                className=\"form-control\"\r\n                onChange={e => handleStatusChange(e, o._id)}\r\n            >\r\n                <option>Update Status</option>\r\n                {statusValues.map((status, index) => (\r\n                    <option key={index} value={status}>\r\n                        {status}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Orders\"\r\n            description={`Good'day ${\r\n                user.name\r\n            }, you can manage all the orders here`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showOrdersLength()}\r\n\r\n                    {orders.map((o, oIndex) => {\r\n                        return (\r\n                            <div\r\n                                className=\"mt-5\"\r\n                                key={oIndex}\r\n                                style={{ borderBottom: \"5px solid indigo\" }}\r\n                            >\r\n                                <h2 className=\"mb-5\">\r\n                                    <span className=\"bg-primary\">\r\n                                        Order ID: {o._id}\r\n                                    </span>\r\n                                </h2>\r\n\r\n                                <ul className=\"list-group mb-2\">\r\n                                    <li className=\"list-group-item\">\r\n                                        {showStatus(o)}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Transaction ID: {o.transaction_id}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Amount: ${o.amount}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Ordered by: {o.user.name}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Ordered on:{\" \"}\r\n                                        {moment(o.createdAt).fromNow()}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Delivery address: {o.address}\r\n                                    </li>\r\n                                </ul>\r\n\r\n                                <h3 className=\"mt-4 mb-4 font-italic\">\r\n                                    Total products in the order:{\" \"}\r\n                                    {o.products.length}\r\n                                </h3>\r\n\r\n                                {o.products.map((p, pIndex) => (\r\n                                    <div\r\n                                        className=\"mb-4\"\r\n                                        key={pIndex}\r\n                                        style={{\r\n                                            padding: \"20px\",\r\n                                            border: \"1px solid indigo\"\r\n                                        }}\r\n                                    >\r\n                                        {showInput(\"Product name\", p.name)}\r\n                                        {showInput(\"Product price\", p.price)}\r\n                                        {showInput(\"Product total\", p.count)}\r\n                                        {showInput(\"Product Id\", p._id)}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Orders;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { read, update, updateUser } from './apiUser';\r\n\r\nconst Profile = ({ match }) => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        error: false,\r\n        success: false\r\n    });\r\n\r\n    const { token } = isAuthenticated();\r\n    const { name, email, password, error, success } = values;\r\n\r\n    const init = userId => {\r\n        // console.log(userId);\r\n        read(userId, token).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: true });\r\n            } else {\r\n                setValues({ ...values, name: data.name, email: data.email });\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        init(match.params.userId);\r\n    }, []);\r\n\r\n    const handleChange = name => e => {\r\n        setValues({ ...values, error: false, [name]: e.target.value });\r\n    };\r\n\r\n    const clickSubmit = e => {\r\n        e.preventDefault();\r\n        update(match.params.userId, token, { name, email, password }).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n                alert(data.error);\r\n            } else {\r\n                updateUser(data, () => {\r\n                    setValues({\r\n                        ...values,\r\n                        name: data.name,\r\n                        email: data.email,\r\n                        success: true\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const redirectUser = success => {\r\n        if (success) {\r\n            return <Redirect to=\"/cart\" />;\r\n        }\r\n    };\r\n\r\n    const profileUpdate = (name, email, password) => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input type=\"text\" onChange={handleChange('name')} className=\"form-control\" value={name} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Email</label>\r\n                <input type=\"email\" onChange={handleChange('email')} className=\"form-control\" value={email} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Password</label>\r\n                <input type=\"password\" onChange={handleChange('password')} className=\"form-control\" value={password} />\r\n            </div>\r\n\r\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\r\n                Submit\r\n            </button>\r\n        </form>\r\n    );\r\n\r\n    return (\r\n        <Layout title=\"Profile\" description=\"Update your profile\" className=\"container-fluid\">\r\n            <h2 className=\"mb-4\">Profile update</h2>\r\n            {profileUpdate(name, email, password)}\r\n            {redirectUser(success)}\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getProducts, deleteProduct } from \"./apiAdmin\";\r\n\r\nconst ManageProducts = () => {\r\n    const [products, setProducts] = useState([]);\r\n\r\n    const { user, token } = isAuthenticated();\r\n\r\n    const loadProducts = () => {\r\n        getProducts().then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setProducts(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    const destroy = productId => {\r\n        deleteProduct(productId, user._id, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                loadProducts();\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadProducts();\r\n    }, []);\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Manage Products\"\r\n            description=\"do changes\"\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <h2 className=\"text-center\">\r\n                        Total {products.length} products\r\n                    </h2>\r\n                    <hr />\r\n                    <ul className=\"list-group\">\r\n                        {products.map((p, i) => (\r\n                            <li\r\n                                key={i}\r\n                                className=\"list-group-item d-flex justify-content-between align-items-center\"\r\n                            >\r\n                                <strong>{p.name}</strong>\r\n                                <Link to={`/admin/product/update/${p._id}`}>\r\n                                    <span className=\"badge badge-warning badge-pill\">\r\n                                        Update\r\n                                    </span>\r\n                                </Link>\r\n                                <span\r\n                                    onClick={() => destroy(p._id)}\r\n                                    className=\"badge badge-danger badge-pill\"\r\n                                >\r\n                                    Delete\r\n                                </span>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <br />\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default ManageProducts;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { getProduct, getCategories, updateProduct } from './apiAdmin';\r\n\r\nconst UpdateProduct = ({ match }) => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        description: '',\r\n        price: '',\r\n        categories: [],\r\n        category: '',\r\n        shipping: '',\r\n        quantity: '',\r\n        photo: '',\r\n        loading: false,\r\n        error: false,\r\n        createdProduct: '',\r\n        redirectToProfile: false,\r\n        formData: ''\r\n    });\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    const { user, token } = isAuthenticated();\r\n    const {\r\n        name,\r\n        description,\r\n        price,\r\n        // categories,\r\n        category,\r\n        shipping,\r\n        quantity,\r\n        loading,\r\n        error,\r\n        createdProduct,\r\n        redirectToProfile,\r\n        formData\r\n    } = values;\r\n\r\n    const init = productId => {\r\n        getProduct(productId).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                // populate the state\r\n                setValues({\r\n                    ...values,\r\n                    name: data.name,\r\n                    description: data.description,\r\n                    price: data.price,\r\n                    category: data.category._id,\r\n                    shipping: data.shipping,\r\n                    quantity: data.quantity,\r\n                    formData: new FormData()\r\n                });\r\n                // load categories\r\n                initCategories();\r\n            }\r\n        });\r\n    };\r\n\r\n    // load categories and set form data\r\n    const initCategories = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setCategories(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        init(match.params.productId);\r\n    }, []);\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\r\n        formData.set(name, value);\r\n        setValues({ ...values, [name]: value });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: '', loading: true });\r\n\r\n        updateProduct(match.params.productId, user._id, token, formData).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: '',\r\n                    description: '',\r\n                    photo: '',\r\n                    price: '',\r\n                    quantity: '',\r\n                    loading: false,\r\n                    error: false,\r\n                    redirectToProfile: true,\r\n                    createdProduct: data.name\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const newPostForm = () => (\r\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\r\n            <h4>Post Photo</h4>\r\n            <div className=\"form-group\">\r\n                <label className=\"btn btn-secondary\">\r\n                    <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Description</label>\r\n                <textarea onChange={handleChange('description')} className=\"form-control\" value={description} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Price</label>\r\n                <input onChange={handleChange('price')} type=\"number\" className=\"form-control\" value={price} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Category</label>\r\n                <select onChange={handleChange('category')} className=\"form-control\">\r\n                    <option>Please select</option>\r\n                    {categories &&\r\n                        categories.map((c, i) => (\r\n                            <option key={i} value={c._id}>\r\n                                {c.name}\r\n                            </option>\r\n                        ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Shipping</label>\r\n                <select onChange={handleChange('shipping')} className=\"form-control\">\r\n                    <option>Please select</option>\r\n                    <option value=\"0\">No</option>\r\n                    <option value=\"1\">Yes</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Quantity</label>\r\n                <input onChange={handleChange('quantity')} type=\"number\" className=\"form-control\" value={quantity} />\r\n            </div>\r\n\r\n            <button className=\"btn btn-outline-primary\">Update Product</button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = () => (\r\n        <div className=\"alert alert-info\" style={{ display: createdProduct ? '' : 'none' }}>\r\n            <h2>{`${createdProduct}`} is updated!</h2>\r\n        </div>\r\n    );\r\n\r\n    const showLoading = () =>\r\n        loading && (\r\n            <div className=\"alert alert-success\">\r\n                <h2>Loading...</h2>\r\n            </div>\r\n        );\r\n\r\n    const redirectUser = () => {\r\n        if (redirectToProfile) {\r\n            if (!error) {\r\n                return <Redirect to=\"/\" />;\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Layout title=\"Add a new product\" description={`G'day ${user.name}, ready to add a new product?`}>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showLoading()}\r\n                    {showSuccess()}\r\n                    {showError()}\r\n                    {newPostForm()}\r\n                    {redirectUser()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default UpdateProduct;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { getCategory, updateCategory } from './apiAdmin';\r\n\r\nconst UpdateCategory = ({ match }) => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        error: '',\r\n        redirectToProfile: false,\r\n        formData: ''\r\n    });\r\n\r\n    // destructure user and token from localStorage\r\n    const { user, token } = isAuthenticated();\r\n\r\n    const { name, error, redirectToProfile } = values;\r\n\r\n    const init = categoryId => {\r\n        getCategory(categoryId, token).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                // populate the state\r\n                setValues({\r\n                    ...values,\r\n                    name: data.name\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        init(match.params.categoryId);\r\n    }, []);\r\n\r\n    const handleChange = name => event => {\r\n        setValues({ ...values, error: false, [name]: event.target.value });\r\n    };\r\n\r\n    const submitCategoryForm = e => {\r\n        e.preventDefault();\r\n        const category = {\r\n            name: name\r\n        };\r\n        updateCategory(match.params.categoryId, user._id, token, category).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: data.name,\r\n                    error: false,\r\n                    redirectToProfile: true\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const updateCategoryForm = () => (\r\n        <div className=\"wrap-login100 p-l-85 p-r-85 p-t-55 p-b-55\">\r\n            <form className=\"mb-5\" onSubmit={submitCategoryForm}>\r\n                <span className=\"login100-form-title p-b-32 m-b-7\">Update Category Form</span>\r\n                <span className=\"txt1 p-b-11\">Category Name</span>\r\n                <br />\r\n                <br />\r\n                <div className=\"wrap-input100 validate-input m-b-36\">\r\n                    <input\r\n                        onChange={handleChange('name')}\r\n                        value={name}\r\n                        className=\"input100\"\r\n                        type=\"text\"\r\n                        required\r\n                        name=\"name\"\r\n                    />\r\n                </div>\r\n                <div className=\"w-size25\">\r\n                    <button type=\"submit\" className=\"flex-c-m size2 bg1 bo-rad-23 hov1 m-text3 trans-0-4\">\r\n                        Save Changes\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div className={'alert alert-danger'} role=\"alert\" style={{ display: error ? '' : 'none' }}>\r\n            <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const redirectUser = () => {\r\n        if (redirectToProfile) {\r\n            if (!error) {\r\n                return <Redirect to=\"/admin/categories\" />;\r\n            }\r\n        }\r\n    };\r\n\r\n    const goBackBTN = () => {\r\n        return (\r\n            <div className=\"mt-5\">\r\n                <Link to=\"/admin/categories\" className=\"text-info\">\r\n                    Back To Admin Home\r\n                </Link>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Layout\r\n            title={`Hi ${user.name}`}\r\n            description={`This is Update Product Action Page`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2 m-b-250 mb-5\">\r\n                    {showError()}\r\n                    {updateCategoryForm()}\r\n                    {goBackBTN()}\r\n                    {redirectUser()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default UpdateCategory;\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Signup from './user/Signup';\r\nimport Signin from './user/Signin';\r\nimport Home from './core/Home';\r\nimport PrivateRoute from './auth/PrivateRoute';\r\nimport Dashboard from './user/UserDashboard';\r\nimport AdminRoute from './auth/AdminRoute';\r\nimport AdminDashboard from './user/AdminDashboard';\r\nimport AddCategory from './admin/AddCategory';\r\nimport AddProduct from './admin/AddProduct';\r\nimport Shop from './core/Shop';\r\nimport Product from './core/Product';\r\nimport Cart from './core/Cart';\r\nimport Orders from './admin/Orders';\r\nimport Profile from './user/Profile';\r\nimport ManageProducts from './admin/ManageProducts';\r\nimport UpdateProduct from './admin/UpdateProduct';\r\nimport UpdateCategory from './admin/updateCategory';\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Home} />\r\n                <Route path=\"/shop\" exact component={Shop} />\r\n                <Route path=\"/signin\" exact component={Signin} />\r\n                <Route path=\"/signup\" exact component={Signup} />\r\n                <PrivateRoute path=\"/user/dashboard\" exact component={Dashboard} />\r\n                <AdminRoute path=\"/admin/dashboard\" exact component={AdminDashboard} />\r\n                <AdminRoute path=\"/create/category\" exact component={AddCategory} />\r\n                <AdminRoute path=\"/create/product\" exact component={AddProduct} />\r\n                <Route path=\"/product/:productId\" exact component={Product} />\r\n                <Route path=\"/cart\" exact component={Cart} />\r\n                <AdminRoute path=\"/admin/orders\" exact component={Orders} />\r\n                <PrivateRoute path=\"/profile/:userId\" exact component={Profile} />\r\n                <PrivateRoute path=\"/admin/products\" exact component={ManageProducts} />\r\n                <AdminRoute path=\"/admin/product/update/:productId\" exact component={UpdateProduct} />\r\n                <AdminRoute path=\"/admin/category/update/:categoryId\" exact component={UpdateCategory} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Routes from \"./Routes\";\r\n\r\nReactDOM.render(<Routes />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}